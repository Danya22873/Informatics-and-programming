// ConsoleApplication3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//массив задаем с клавы

#include <iostream>
#include <cmath>
#include <clocale>
using namespace std;


int main()
{
    setlocale(LC_CTYPE, "rus");
    int size = 1;
    cout << "задайте размер массива - ";
    cin >> size;


    int* arr = new int[size];

    // Заполняем массив с клавиатуры
    for (int i = 0; i < size; i++) {
        cout << "[" << i + 1 << "]" << ": ";
        cin >> arr[i];
    }

    int x = arr[0];//инициализируем переменную x, где будем хранить максимальное число. возьмем x = первому элементу массива


    //ИЩЕМ МАКСИМАЛЬНОЕ
    for (int i = 0; i < size; ++i) {
        if (x < arr[i]) { //если х меньше чем элемент массива  
            x = arr[i];   //то х будет равно этому элементу  
        }
    }

    int countMax = 0;
    //ИЩЕМ КОЛИЧЕСТВО МАКСИМАЛЬНЫХ
    for (int i = 0; i < size; ++i) {
        if (x == arr[i]) {
            countMax = countMax + 1;
        }
    }

    int y = arr[0]; //инициализируем переменную x, где будем хранить максимальное число. возьмем y = первому элементу массива


    //ИЩЕМ МИНИМАЛЬНОЕ
    for (int i = 0; i < size; ++i) {
        if (y > arr[i]) { //если y больше чем элемент массива  
            y = arr[i];   //то y будет равно этому элементу  
        }
    }


    //ИЩЕМ КОЛИЧЕСТВО МИНИМАЛЬНЫХ
    int countMin = 0;
    for (int i = 0; i < size; ++i) {
        if (y == arr[i]) {
            countMin = countMin + 1;
        }
    }


    // И выводим заполненный массив.
    cout << "\nВаш массив: ";

    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }

    cout << endl;
    cout << "Количество максимальных - " << countMax << endl;
    cout << "Количество минимальных - " << countMin << endl;
    system("pause");
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.



